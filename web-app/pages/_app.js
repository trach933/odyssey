import Head from "next/head";
import "../styles/globals.css";
import Layout from "../components/layouts";
import { Provider } from "@self.id/react";

import { Web3Provider } from "@ethersproject/providers";
import { useEffect, useRef, useState } from "react";
import Web3Modal from "web3modal";
import { useViewerConnection } from "@self.id/react";
import { EthereumAuthProvider } from "@self.id/web";
import { useViewerRecord } from "@self.id/react";

function MyApp({ Component, pageProps }) {
  const web3ModalRef = useRef();

  const getProvider = async () => {
    const provider = await web3ModalRef.current.connect();
    const wrappedProvider = new Web3Provider(provider);
    return wrappedProvider;
  };

  const [connection, connect, disconnect] = useViewerConnection();

  useEffect(() => {
    if (connection.status !== "connected") {
      web3ModalRef.current = new Web3Modal({
        network: "polygon",
        providerOptions: {},
        disableInjectedProvider: false,
      });
    }
  }, [connection.status]);

  const connectToSelfID = async () => {
    const ethereumAuthProvider = await getEthereumAuthProvider();
    connect(ethereumAuthProvider);
  };

  const getEthereumAuthProvider = async () => {
    const wrappedProvider = await getProvider();
    const signer = wrappedProvider.getSigner();
    const address = await signer.getAddress();
    return new EthereumAuthProvider(wrappedProvider.provider, address);
  };

  return (
    <Provider client={{ ceramic: "testnet-clay" }}>
      <Head>
        <title>Entropy</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <nav>
        <div className="navbar bg-warning">
          <div className="flex-1">
            <a className="normal-case text-xl">Entropy</a>
          </div>
          <div className="flex-none">
            {connection.status === "connected" ? (
              <span>{connection.selfID.id}</span>
            ) : (
              <button
                onClick={connectToSelfID}
                disabled={connection.status === "connecting"}
              >
                Connect
              </button>
            )}
          </div>
        </div>
      </nav> */}
      <div className="p-5">
        <Component {...pageProps} />
      </div>
    </Provider>
  );
}

export default MyApp;
